{"version":3,"sources":["src/pages/Main.tsx","src/routes.tsx","App.tsx","web-build/register-service-worker.js"],"names":["styles","StyleSheet","create","member","flexDirection","alignItems","marginBottom","image","width","height","borderRadius","marginRight","Main","useState","members","setMembers","useEffect","fetch","then","response","json","data","FlatList","contentContainerStyle","padding","keyExtractor","login","renderItem","item","View","style","Image","source","uri","avatar_url","Text","Tab","createBottomTabNavigator","Routes","NavigationContainer","Navigator","Screen","options","tabBarIcon","color","Feather","name","size","component","App","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","error","console"],"mappings":"sNAkCMA,E,KAASC,EAAWC,OAAO,CAC/BC,OAAQ,CACNC,cAAe,MACfC,WAAY,SACZC,aAAc,IAEhBC,MAAO,CACLC,MAAO,GACPC,OAAQ,GACRC,aAAc,GACdC,YAAa,MAIFC,EAxCQ,WACrB,MAA8BC,mBAAmB,IAAjD,WAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,qBAAU,WACRC,MAAM,8CAA8CC,MAAK,SAACC,GACxDA,EAASC,OAAOF,MAAK,SAACG,GACpBN,EAAWM,WAGd,IAGD,kBAACC,EAAA,EAAD,CACAC,sBAAuB,CAAEC,QAAS,IAChCH,KAAMP,EACNW,aAAc,SAACtB,GAAD,OAAYA,EAAOuB,OACjCC,WAAY,gBAASxB,EAAT,EAAGyB,KAAH,OACV,kBAACC,EAAA,EAAD,CAAMC,MAAO9B,EAAOG,QAClB,kBAAC4B,EAAA,EAAD,CAAOD,MAAO9B,EAAOO,MAAOyB,OAAQ,CAAEC,IAAK9B,EAAO+B,cAClD,kBAACC,EAAA,EAAD,KAAOhC,EAAOuB,YCrBlBU,EAAMC,cAEG,SAASC,IACtB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACH,EAAII,UAAL,KACE,kBAACJ,EAAIK,OAAL,CACEC,QAAS,CACPC,WAAY,gBAAGC,EAAH,EAAGA,MAAH,OACV,kBAACC,EAAA,EAAD,CAASC,KAAK,OAAOC,KAAM,GAAIH,MAAOA,MAG1CE,KAAK,OACLE,UAAWpC,MCfN,SAASqC,IACtB,OACG,kBAACX,EAAD,Q,+DCJD,kBAAmBY,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CrC,MAAK,SAAUsC,OAGfC,OAAM,SAAUC,GACfC,QAAQH,KAAK,oCAAqCE,W","file":"static/js/app.78a5d4ca.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FlatList, View, Image, Text, StyleSheet } from \"react-native\";\n\ninterface Member {\n  login: string;\n  avatar_url: string;\n}\n\nconst Main: React.FC = () => {\n  const [members, setMembers] = useState<Member[]>([]);\n\n  useEffect(() => {\n    fetch(\"https://api.github.com/orgs/google/members\").then((response) => {\n      response.json().then((data) => {\n        setMembers(data);\n      });\n    });\n  }, []);\n\n  return (\n    <FlatList\n    contentContainerStyle={{ padding: 24 }}\n      data={members}\n      keyExtractor={(member) => member.login}\n      renderItem={({ item: member }) => (\n        <View style={styles.member}>\n          <Image style={styles.image} source={{ uri: member.avatar_url }} />\n          <Text>{member.login}</Text>\n        </View>\n      )}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  member: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  image: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n    marginRight: 16\n  }\n})\n\nexport default Main;\n","import React from \"react\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport Main from \"./pages/Main\";\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Routes() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator>\n        <Tab.Screen\n          options={{\n            tabBarIcon: ({ color }) => (\n              <Feather name=\"home\" size={20} color={color} />\n            ),\n          }}\n          name=\"Main\"\n          component={Main}\n        />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n","import React from 'react';\nimport Routes from './src/routes';\n\n\nexport default function App() {\n  return (\n     <Routes />\n  );\n}","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}